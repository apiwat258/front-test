const API_URL = "http://127.0.0.1:8080/api/v1/factory/milk/";

export const getFactoryRawMilkTanks = async (): Promise<any> => {
    try {
        const response = await fetch(API_URL + "list", {
            method: "GET",
            headers: {
                "Content-Type": "application/json",
            },
            credentials: "include", // ‚úÖ ‡∏™‡πà‡∏á Cookie (‡πÄ‡∏â‡∏û‡∏≤‡∏∞ Client Component ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô)
            cache: "no-store", // ‚úÖ ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô Next.js ‡πÅ‡∏Ñ‡∏ä‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô Server Component
        });

        if (!response.ok) {
            console.error("‚ùå Failed to fetch factory milk tanks, Status:", response.status);
            throw new Error("Failed to fetch factory milk tanks");
        }

        const data = await response.json();
        console.log("üì° API Response:", data);

        // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á API Response
        if (!data || typeof data !== "object" || !Array.isArray(data.displayedMilkTanks)) {
            console.error("‚ùå Invalid API response format:", data);
            return [];
        }

        // ‚úÖ ‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö `RecieveRM.tsx`
        const formattedData = data.displayedMilkTanks.map((tank: any) => ({
            milkTankInfo: {
                tankId: tank?.moreInfoLink?.split("=")[1]?.trim() || "", // ‚úÖ ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô `split` ‡πÅ‡∏•‡πâ‡∏ß Error
                personInCharge: tank?.personInCharge || "Unknown",
            },
            status: tank?.status === 0 ? "Pending" : tank?.status === 1 ? "Received" : "Rejected", // ‚úÖ ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö "Rejected"
            id: tank?.moreInfoLink?.split("=")[1]?.trim() || "", // ‚úÖ ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô `split` ‡πÅ‡∏•‡πâ‡∏ß Error
        }));
        

        console.log("‚úÖ Formatted Factory Milk Tanks:", formattedData);
        return formattedData;
    } catch (error) {
        console.error("‚ùå Error fetching factory raw milk tanks:", error);
        return [];
    }
};

// ‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ç‡∏≠‡∏á‡πÅ‡∏ó‡πá‡∏á‡∏Å‡πå‡∏ô‡∏°‡∏î‡∏¥‡∏ö (Approve/Reject)
export const updateMilkTankStatus = async (
    tankId: string,
    approved: boolean,
    input: any
): Promise<any> => {
    try {
        const requestBody = {
            tankId,
            approved,
            input
        };

        console.log("üì° Sending Update Request:", requestBody);

        const response = await fetch(API_URL + "update-status", {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
            },
            credentials: "include",
            body: JSON.stringify(requestBody),
        });

        if (!response.ok) {
            console.error("‚ùå Failed to update milk tank status, Status:", response.status);
            throw new Error("Failed to update milk tank status");
        }

        const data = await response.json();
        console.log("‚úÖ Milk Tank Status Updated:", data);
        return data;
    } catch (error) {
        console.error("‚ùå Error updating milk tank status:", error);
        return null;
    }
};